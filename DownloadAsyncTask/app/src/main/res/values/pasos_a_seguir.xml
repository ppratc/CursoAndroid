<?xml version="1.0" encoding="utf-8"?>
<!--

1. Defino el permiso necesario para usar Internet en el Manifest

    <uses-permission android:name="android.permission.INTERNET" />

2. Añado las siguientes variables a DownloadAsyncTaskActivity

    private ProgressBar miProgressBar;
    private String MI_URL = "http://www.xiruca.com/sites/xiruca.com/files/galeria/Vall_Madriu_32.JPG";
    private String TAG = "DownloadAsyncTaskActivity";

3. Modifico la acción a realizar cuando pulso el botón de cargar la imagen para descargarla de Internet

        loadButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                new CargaImagen().execute(MI_URL);
            }
        });

4. Modifico la AsyncTask CargaImagen para que cargue desde Internet

    class CargaImagen extends AsyncTask<String, Integer, File> {

    Para el doInBackgroung trabajaré con el String que contiene la URL a abrir
    El progreso lo mostraré con un Integer
    El resultado obtenido será de tipo File, que nos permite acceder a la ruta del archivo guardado

   4.1 onPreExecute queda igual que antes

        @Override
        protected void onPreExecute() {
            miProgressBar.setVisibility(ProgressBar.VISIBLE);
        }

   4.2 doInBrackground registra diversos cambios

        Debo abrir la conexión http a mi url

        //Creo una URL con la dirección escogida para abrir el archivo
        URL url = new URL(carga_url[0]);
        //Creo una conexión HttpURLConnection y me conecto
        HttpURLConnection conection = (HttpURLConnection) url.openConnection();
        conection.connect();

        // Obtengo la longitud del archivo a descargar

        int longitud = conection.getContentLength();;

        Abro los streams de salida y entrada de datos

                // input stream para leer el archivo de tamaño 8k
                InputStream input = new BufferedInputStream(url.openStream(), 8192);

                //Obtengo la ruta de los archivos en memoria interna
                String direct =  getApplicationContext().getFilesDir().getPath();

                //creo imagen en la carpeta
                file = new File(direct, "vall_madriu.jpg");

                // Output stream para guardar el fichero
                OutputStream output = new FileOutputStream(file);

        Lectura y almacenamiento progresivo de datos

                byte data[] = new byte[200024];
                long total = 0;


                while ((cargados = input.read(data)) != -1) {
                    total += cargados;
                    // procesando el fichero
                    // mostrando los progresos
                    publishProgress((int)((total*100)/longitud));

                    // guardando los datos en el stream que nos guarda en el fichero
                    output.write(data, 0, cargados);
                }


        liberando stream de salida

                output.flush();

        Cerrando ambos streams

                output.close();
                input.close();

        Gestión de errores e interrupciones

            } catch (MalformedURLException exception) {
                Log.e(TAG, "MalformedURLException");
            } catch (IOException exception) {
                Log.e(TAG, "IOException");
            } finally {
                if (null != httpUrlConnection)
                    httpUrlConnection.disconnect();
            }

       Retorno de variable de tipo File que me servirá para acceder a mi imagen guardada en memoria interna
            return (file);

    4.3 Uso el result obtenido del doInBackground en el onPostExecute para configurar la imagen a cargar

          // Poniendo imagen guarda en el UI
            Bitmap bitmap = BitmapFactory.decodeFile(result.getAbsolutePath());
            miView.setImageBitmap(bitmap);
-->
<resources></resources>
