<?xml version="1.0" encoding="utf-8"?>
<!--
    1. Poner la permission para acceder a Internet

        <uses-permission android:name="android.permission.INTERNET" >
        </uses-permission>

    2. Poner la línea
       useLibrary  'org.apache.http.legacy' en el build.gradle para usar AndroidHttpClient

        android {
             compileSdkVersion 23
             buildToolsVersion "23.0.3"
             useLibrary  'org.apache.http.legacy'

    3. Creo la Activity ListaXMLActivity como activity principal, con su layout correspondiente (activity_lista_xml.xml)
        que sólo posee un botón y que nos lleva a una nueva activity que cargará la lista: CargaXMLActivity-

        Código que implementa el cambio de activity:

        final Button boton_carga = (Button) findViewById(R.id.boton_carga);
        boton_carga.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                startActivity(new Intent(ListaXMLActivity.this,
                        CargaXMLActivity.class));
            }
        });

    4. Creo una nueva Empty Activity, llamada CargaXMLActivity, de tipo ListActivity
        para no tener que crear un layout y usar las funcionalidades propias de las listas

        private static final String URL = "http://www.xiruca.com/sites/xiruca.com/files/track/Vall_Madriu.gpx";

        @Override
        public void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);

            new HttpGetTask().execute(URL);
        }

        Usaré un AsyncTask llamado HttpGetTask() para gestionar la carga del XML y su interpretación

    5. Defino el layout concreto que tendrán los elementos de mi lista en activity_lista.xml

        <?xml version="1.0" encoding="utf-8"?>
        <TextView xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="fill_parent"
            android:layout_height="fill_parent"
            android:padding="10dp"
            android:textSize="24sp" >
        </TextView>

    6. Creo el Asynctask HttpGetTask que abre la conexión, descarga y "parsea" el XML con un Handler

       //La clase HttpGetTask usa el String URL para cargar los datos y los guarda en una lista de Strings
       private class HttpGetTask extends AsyncTask<String, Void, List<String>> {

            //Creo el cliente de tipo AndroidHttpClient con newInstance
            AndroidHttpClient mClient = AndroidHttpClient.newInstance("");

            //En Background creo la consulta a mi URL y gestiono los datos recibidos de la misma con
            //mi XMLResponseHandler
            @Override
            protected List<String> doInBackground(String... params) {
                HttpGet request = new HttpGet(params[0]);
                XMLResponseHandler responseHandler = new XMLResponseHandler();
                try {
                    //Ejecuto una request, manejada por mi responsehandler, que retorna una lista de Strings
                    return mClient.execute(request, responseHandler);
                } catch (ClientProtocolException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                return null;
            }

            //Ejecutado el proceso en BackGround y devuelta la lista de Strings, cierro la conexió
            //Después creo el Adapter de mi ListView
            @Override
            protected void onPostExecute(List<String> result) {
                if (null != mClient)
                    mClient.close();
                setListAdapter(new ArrayAdapter<String>(
                        CargaXMLActivity.this,
                        R.layout.activity_lista_xml, result));
            }
        }

    7. Implemento el Handler que "parseará" el XML: XMLResponseHandler

        Ver código de XMLResponseHandler.java



-->
<resources></resources>